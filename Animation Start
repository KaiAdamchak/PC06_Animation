"""
Pygame Startere Code
ATLS 1300
Author: Juliette Goubeaud, Autumn Bement, Kai Adamchak
10/14/2022

Description:
Ball goes across screen and when it interacts with the boundaries of the window it changes color and direction.
'''"""

import pygame, random, math
pygame.init() # initialize pygame managers

# create a window
w = 600
h = 600
win = pygame.display.set_mode((w,h)) # define window variable
# pygame.display.set_caption("Read carefully.") # uncomment & edit to caption the window

#======================== Variables & functions ===================================================
WHITE = (255,255,255) # some handy RGB values
BLACK = (0,0,0)

# create a function to call to change the color of the ball after it interacts with the boundaries of the window
def newColor(new):
    while running:
        # if the ball touches the boundary of the window, it changes color
        if xpos >= 295 or xpos <= -295:
            new = random.choice(color)
        # return the new color value
        return new

# create a function to call to change the direction of the ball after it interacts with the boundaries of the window
def oscillate(xpos, step):
    while running:
        xpos += step
        # if the ball touches the boundary of the window, it changes direction
        if xpos >= 300 or xpos <= -300:
            step *= -1
        # if the ball does not touch the boundary of the window, it continues on it's path
        else:
            xpos += step
        # return the new step value
        return step


#================================ Animation loop ===================================================

# start values defined here
Step = 5
xpos = 5
x = w/2
y = h/2
clock = pygame.time.Clock() # for framerate timing
color = ("red", "orange", "yellow", "green", "blue", "purple", "violet", "white")
col_choice = random.choice(color)
running = True
count = 0 # Counter

# make sure the window fills in black to start
win.fill(BLACK)
# create a loop to run until it no longer becomes True
while running:
    # clear window (comment out to have trace behind animation)
    win.fill(BLACK)
    # create a circle to animate
    pygame.draw.circle(win, col_choice, (x+xpos,y), 50)

    # start moving the circle
    xpos += Step
    # start counting the iterations
    count += 1
    # call oscillate() function
    Step = oscillate(xpos, Step)
    # call newColor() function
    col_choice = newColor(xpos, col_choice)
  

    # This loop allows windows when exit is clicked.
    # Do not change, remove or augment this loop...yet.
    for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False # stops animation

    # if the iterations go more than 2000 times, stop running the code
    if count == 2000:
        running = False

    #================== Your animation tasks ================
    # stop conditional would go here     
    
    #================== Animation control ===================
    pygame.display.update()
    clock.tick(30) # framerate in fps (30-60 is typical)

#pygame.display.quit() # uncomment to automatically close window at end of animation 
